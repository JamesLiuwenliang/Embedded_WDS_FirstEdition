/*
光敏电阻:
			1.	可调电阻和光敏电阻共同接到比较器的两端,比较器的另一端就会输出0/1,
				光敏电阻阻值大时表示光线暗,输出1
				光线亮时,输出0
			2.	启动ADC 读出AIN1的值
			3.	启动中断:1)初始化:GPG7(EINT15)配置为中断引脚
								  设置中断触发方式;双边沿触发
								  设置ENITMASK使能中断
						 2)中断处理:分辨:读ENTMASK

高精度延时函数:
			1.	使用定时器,减少调用函数的次数,函数压栈出栈同样花费时间
						 
						 
温湿度传感器:
			1.	此传感器对于时间十分敏感,需要等待一定的时间才可以实现

温度传感器(DS18B20):
			1.	主控芯片上可以同时挂载多个温度传感器,每个温度传感器上都有自己的ID
			2.	操作步骤:	0) 初始化:发出低脉冲
							1) 发出ID命令:ROM Command
							2) 发出功能命令: Function Command(比如转换温度,读数据等)
			3. 	EEPROM内部具有一些存储,可以存入警报温度(上下限)以及用于设置精度	
			4.	datasheet上包含其流程图
			5.	需要特别注意的是	确保初识时必须是高电平

memcpy:	
void *memcpy(void *dest,const void *src,int count)
{
	char *tmp=dest;
	const char *s = src;
	
	while(count--)
	{
		*tmp++ = *s++;
	}
	
	return dest;
}



红外传感器:
			1. 红外协议: NEC协议,但是大部分中文blog都漏掉了最后的结束脉冲(低脉冲0.56ms)
			2. 基本脉冲宽度 = 562.5us = t  ,建议用中断处理.
			3. 操作步骤: 	1)引脚设为双边沿触发
							2)发生中断时,计算当前中断与上次中断的时间差(记录脉冲宽度与极性)
							3)主循环解析这些数据			
				要点:		1)中断 2)系统时间 3)环形buffer 4)NEC解析
			
			4. 环装 buffer	: 建立两个指针p和r(也可以是int型变量,那你的环装缓冲区得是数组)
							  将数据放入缓冲区,时刻判断是否已满,
			5. 在中断处理函数: 1)记录中断发生的时间 2)跟上次中断的时间比较,计算出脉冲宽度 3)读取引脚极性 4)把数据放入环形缓冲区
			6. 

			
			
			
			
			
			
			
			
			


*/









